# -*- coding: cp1251 -*-

# Задача 1. #Планеты вращаются вокруг звезд по эллиптическим орбитам. Назовем самой 
# далекой планетой ту, орбита которой имеет самую большую площадь. Напишите функцию 
# find_farthest_orbit(list_of_orbits), которая среди списка орбит планет найдет
# ту, по которой вращается самая далекая планета. Круговые орбиты не учитывайте: 
# вы знаете, что у вашей звезды таких планет нет, зато искусственные спутники были 
# запущены на круговые орбиты. Результатом функции должен быть кортеж, содержащий 
# длины полуосей эллипса орбиты самой далекой планеты. Каждая орбита представляет 
# из себя кортеж из пары чисел - полуосей ее эллипса. Площадь эллипса вычисляется 
# по формуле S = pi * a * b, где a и b - длины полуосей эллипса. При решении задачи 
# используйте списочные выражения. Подсказка: проще всего будет найти эллипс в два 
# шага: сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс, 
# имеющий такую площадь. Гарантируется, что самая далекая планета ровно одна

#def find_farthest_orbit(orbits):
#	maxx = orbits[0]
#	for x in orbits:
#		if x[0] != x[1]:
#			if x[0] * x[1] > maxx[0] * maxx[1]:
#				maxx = x
#	return maxx

#orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
#print(find_farthest_orbit(orbits))

# Задача 2. Создайте список из случайных чисел. Найдите номер его последнего локального максимума (локальный максимум — это элемент, 
# который больше любого из своих соседей).

import random

def loc_max(sl):
	for i in range(1, len(sl) - 1):
		if sl[i - 1] < sl[i] > sl[i + 1]:
			maxx = i
	return maxx

some_list = [random.randint(1, 10)for i in range(10)]
print(some_list)
print(loc_max(some_list))